Visual Studio 설정 및 가상 환경 생성
Visual Studio 설치

Visual Studio를 열고 Python 개발 워크로드가 설치되어 있는지 확인합니다. 없으면 Visual Studio 설치 관리자를 통해 추가합니다.
새 프로젝트 생성

Visual Studio에서 "파일" > "새로 만들기" > "프로젝트"를 선택합니다.
Python 프로젝트를 선택하고, 적절한 이름과 위치를 지정한 뒤 생성합니다.
가상 환경 설정

프로젝트가 생성되면, 솔루션 탐색기에서 프로젝트 이름을 오른쪽 클릭 > "Python 환경 추가"를 선택합니다.
"가상 환경"을 선택한 뒤 Python 버전을 설정하고, 가상 환경 이름을 지정합니다(예: venv).
Django 설치

Visual Studio 하단의 Python 환경 탭 또는 명령 프롬프트에서 다음 명령어로 Django를 설치합니다:

pip install django

Django 프로젝트 생성
Django 프로젝트 시작

Visual Studio의 터미널 또는 Command Prompt에서 다음 명령어를 실행합니다:
bash
코드 복사
django-admin startproject myproject .
myproject는 프로젝트 이름입니다.
.는 현재 디렉토리에 프로젝트를 생성하겠다는 의미입니다.
Django 서버 실행

아래 명령어로 개발 서버를 실행하여 초기 설정이 정상적으로 작동하는지 확인합니다:
bash
코드 복사
python manage.py runserver
브라우저에서 http://127.0.0.1:8000/에 접속하여 Django 환영 페이지를 확인합니다.
Index 페이지 설정
앱 생성

Django 앱을 생성합니다:
bash
코드 복사
python manage.py startapp main
main은 앱 이름입니다.
앱 등록

프로젝트의 settings.py 파일을 열고 INSTALLED_APPS에 main을 추가합니다:
python
코드 복사
INSTALLED_APPS = [
    ...,
    'main',
]
URL 라우팅 설정

myproject/urls.py 파일을 열고 main 앱의 URL을 포함시킵니다:
python
코드 복사
from django.contrib import admin
from django.urls import path, include

urlpatterns = [
    path('admin/', admin.site.urls),
    path('', include('main.urls')),  # 메인 앱의 URL을 포함
]
main/urls.py 파일 생성

main 앱 디렉토리 내에 urls.py 파일을 생성하고 다음 내용을 작성합니다:
python
코드 복사
from django.urls import path
from . import views

urlpatterns = [
    path('', views.index, name='index'),
]
뷰 함수 작성

main/views.py 파일에서 index 뷰를 작성합니다:
python
코드 복사
from django.http import HttpResponse

def index(request):
    return HttpResponse("Hello, Django!")
서버 실행 및 확인

서버를 실행하고 브라우저에서 http://127.0.0.1:8000/에 접속하여 "Hello, Django!"가 출력되는지 확인합니다:
bash
코드 복사
python manage.py runserver